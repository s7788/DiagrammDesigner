<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:DiagramDesigner"
                    xmlns:c="clr-namespace:DiagramDesigner.Controls" 
                    xmlns:v="clr-namespace:DiagramDesigner.Converter">
    
    <ResourceDictionary.MergedDictionaries>        
            <ResourceDictionary Source="/DiagramDesigner;component/Resources/Styles/Shared.xaml"/>            
        </ResourceDictionary.MergedDictionaries>
    <ContextMenu x:Key="ConnectionContextMenu">
        <MenuItem Header="Rename" Command="{x:Static s:DesignerCanvas.Rename}">
            <!--<MenuItem.Icon>
                <Image Source="Images/Delete.png" Width="16"/>
            </MenuItem.Icon>-->
        </MenuItem>
        <MenuItem Header="Delete" Command="{x:Static ApplicationCommands.Delete}">
            <MenuItem.Icon>
                <Image Source="/DiagramDesigner;component/Resources/Images/Delete.png" Width="16"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Order">
            <MenuItem Header="Bring Forward" Command="{x:Static s:DesignerCanvas.BringForward}">
                <MenuItem.Icon>
                    <Image Source="/DiagramDesigner;component/Resources/Images/BringForward.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Bring To Front" Command="{x:Static s:DesignerCanvas.BringToFront}">
                <MenuItem.Icon>
                    <Image Source="/DiagramDesigner;component/Resources/Images/BringToFront.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Send Backward" Command="{x:Static s:DesignerCanvas.SendBackward}">
                <MenuItem.Icon>
                    <Image Source="/DiagramDesigner;component/Resources/Images/SendBackward.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Send To Back" Command="{x:Static s:DesignerCanvas.SendToBack}">
                <MenuItem.Icon>
                    <Image Source="/DiagramDesigner;component/Resources/Images/SendToBack.png" Width="16"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
    </ContextMenu>
    <Style TargetType="{x:Type s:Connection}">
        <Style.Resources>
            <!-- Style for the ConnectorAdorner thumbs -->
            <Style x:Key="ConnectionAdornerThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Width" Value="12"/>
                <Setter Property="Height" Value="12"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>                
                <!--<Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-6" Y="-6"/>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle Fill="#AADCDCDC" Margin="-6,-6,6,6" Stroke="DodgerBlue" StrokeThickness="1" RadiusX="0" RadiusY="0"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Arrow Grid Style -->
            <Style x:Key="ArrowGridStyle" TargetType="Grid">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="-5" Y="-5"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- base style for all arrow shapes -->
            <Style x:Key="ArrowSymbolBaseStyle" TargetType="Path">
                <Setter Property="Fill" Value="{StaticResource SolidBorderBrush}"/>
                <Setter Property="Stretch" Value="Fill"/>
            </Style>
            <!-- Arrow -->
            <Style x:Key="Arrow" TargetType="Path" BasedOn="{StaticResource ArrowSymbolBaseStyle}">
                <Setter Property="Data" Value="M0,0 8,4 0,8 Z"/>
            </Style>
            <!-- Diamond  -->
            <Style x:Key="Diamond" TargetType="Path" BasedOn="{StaticResource ArrowSymbolBaseStyle}">
                <Setter Property="Data" Value="M-5,0 0,-5 5,0 0,5 Z"/>
            </Style>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ShowShadow" Value="True"></Setter>
        <Setter Property="Foreground" Value="{Binding Color, RelativeSource={RelativeSource Self}}"></Setter>
        <Setter Property="Panel.ZIndex" Value="{Binding ZIndex, RelativeSource={RelativeSource Self}}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:Connection}">
                    <Canvas DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                    <c:ArrowPath ContextMenu="{StaticResource ConnectionContextMenu}" x:Name="PART_Arrow"
                          Stroke="{Binding PathColor}" StrokeDashArray="{Binding StrokeDashArray}" StrokeThickness="{Binding StrokeThickness}"
                          StrokeEndLineCap="Triangle" IsArc="{Binding IsArc,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          SnapsToDevicePixels="True"                  
                          X1="{Binding AnchorPositionSource.X}"
                          X2="{Binding AnchorPositionSink.X}"
                          Y1="{Binding AnchorPositionSource.Y}"
                          Y2="{Binding AnchorPositionSink.Y}"   
                          Points="{Binding Points}" />
                        <TextBlock Canvas.Left="{Binding AnchorPositionMiddle.X}" 
                                   Canvas.Top="{Binding AnchorPositionMiddle.Y}" Text="{Binding Text}" FontSize="8" Foreground="Black">
                            <!--<TextBlock.LayoutTransform>
                                <RotateTransform Angle="{Binding AnchorAngleSink}" />
                            </TextBlock.LayoutTransform>-->
                        </TextBlock>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=ShowShadow}">
                            <Setter TargetName="PART_Arrow" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black" Direction="315" ShadowDepth="10" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Value="Arrow" Binding="{Binding RelativeSource={RelativeSource Self},Path=SinkArrowSymbol}">
                            <Setter TargetName="PART_Arrow" Property="HeadWidth" Value="10"/>
                            <Setter TargetName="PART_Arrow" Property="HeadHeight" Value="5"/>
                        </DataTrigger>                                               

                        <Trigger Value="true" Property="IsMouseOver">
                            <Setter Property="Foreground" Value="LightPink"/>
                            <Setter Property="Panel.ZIndex" Value="99999"/>
                        </Trigger>

                        <DataTrigger Value="true" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsSelected}">
                            <Setter Property="Foreground" Value="DarkOrange"/>
                            <Setter Property="Panel.ZIndex" Value="99999"/>
                        </DataTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
